{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"proc",
				"process"
			],
			[
				"exis",
				"existsSync"
			],
			[
				"bin",
				"binaries"
			],
			[
				"req",
				"require"
			],
			[
				"co",
				"coffee-shell"
			],
			[
				"liter",
				"literalToken"
			],
			[
				"here",
				"heredoc"
			],
			[
				"Make",
				"makeString"
			],
			[
				"index",
				"index_started"
			],
			[
				"to",
				"tokens"
			],
			[
				"bu",
				"builtin"
			],
			[
				"Coff",
				"CoffeeScript"
			],
			[
				"Ultimate",
				"ultimateshell"
			],
			[
				"ultimatesh",
				"ultimateshell"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "Packages/User/CoffeeShell.sublime-build",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"",
				"Snippet: #!/usr/bin/env"
			],
			[
				"coffee",
				"Set Syntax: CoffeeScript"
			]
		],
		"width": 392.0
	},
	"console":
	{
		"height": 582.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/cobells/Work/node/coffeeshell/lexer.coffee",
		"/home/cobells/Work/node/coffeeshell/rewriter.coffee",
		"/home/cobells/Work/node/coffeeshell/grammar.coffee",
		"/home/cobells/Work/node/coffeeshell/parser.js",
		"/home/cobells/Work/node/coffeeshell/repl.coffee",
		"/home/cobells/Work/node/coffeeshell/node_modules/commander/commander.js/lib/commander.js",
		"/home/cobells/.config/sublime-text-2/Packages/Default/Base File.sublime-settings",
		"/home/cobells/Work/node/coffeeshell/coffee-shell.coffee",
		"/home/cobells/Store2",
		"/home/cobells/Work/node/coffeeshell/nano.save.2",
		"/home/cobells/Work/node/coffeeshell/node_modules/commander/commander.js/index.js",
		"/home/cobells/Work/node/coffeeshell/nano.save.1",
		"/home/cobells/Work/node/coffeeshell/nano.save",
		"/home/cobells/Work/node/coffeeshell/aoeu",
		"/home/cobells/Work/node/coffeeshell/nano.save.9",
		"/home/cobells/Work/node/coffeeshell/node_modules/commander/commander.js/Makefile",
		"/home/cobells/Work/node/coffeeshell/nodes.coffee",
		"/home/cobells/.config/sublime-text-2/Packages/Default/Global.sublime-settings",
		"/home/cobells/Work/node/coffeeshell/bin/coffee-shell",
		"/home/cobells/Work/node/coffeeshell/README",
		"/home/cobells/.config/sublime-text-2/Packages/User/Global.sublime-settings",
		"/home/cobells/.config/sublime-text-2/Packages/User/CoffeeShell.sublime-build",
		"/home/cobells/Work/node/coffeeshell/command.js",
		"/home/cobells/Work/node/coffeeshell/command.coffee",
		"/home/cobells/.config/sublime-text-2/Packages/User/CoffeeScript.sublime-settings",
		"/home/cobells/.config/sublime-text-2/Packages/User/Base File.sublime-settings",
		"/home/cobells/.config/sublime-text-2/Packages/User/CoffeeShell.js",
		"/home/cobells/Work/node/coffeeshell/coffeeshell.sublime-project",
		"/home/cobells/.config/sublime-text-2/Packages/Default/Default (Linux).sublime-keymap",
		"/home/cobells/Work/node/coffeeshell/bin/coffee-shell.js",
		"/home/cobells/Work/node/coffeeshell/oldtokenizer",
		"/home/cobells/Work/node/coffeeshell/notes",
		"/home/cobells/Work/node/coffee-script/src/lexer.coffee",
		"/home/cobells/Work/node/coffeeshell/coffee-script.coffee",
		"/home/cobells/Work/node/coffeeshell/utf",
		"/home/cobells/Work/node/coffeeshell/node_modules/coffee-script/lib/coffee-script/lexer.js",
		"/home/cobells/Work/node/coffeeshell/package.json",
		"/home/cobells/.config/sublime-text-2/Packages/CoffeeScript/Commands/Run.tmCommand",
		"/home/cobells/.config/sublime-text-2/Packages/CoffeeScript/Commands/Run selected text.tmCommand",
		"/home/cobells/.config/sublime-text-2/Packages/User/Default (Linux).sublime-keymap",
		"/home/cobells/.config/sublime-text-2/Packages/User/JSON.sublime-settings",
		"/home/cobells/Work/node/coffeeshell/coffeeshell.sublime-workspace",
		"/home/cobells/Work/node/coffeeshell/coffee-shell.js",
		"/home/cobells/Work/node/coffeeshell/lexer.js",
		"/home/cobells/Work/node/node_modules/coffee-shell/grammar.coffee",
		"/home/cobells/Work/node/node_modules/coffee-shell/parser.js",
		"/home/cobells/Work/node/node_modules/coffee-shell/helpers.coffee",
		"/home/cobells/Work/node/node_modules/coffee-shell/rewriter.coffee",
		"/home/cobells/Work/node/node_modules/coffee-shell/package.json",
		"/home/cobells/Work/node/node_modules/coffee-shell/repl.coffee",
		"/home/cobells/Work/node/node_modules/coffee-shell/bin/coffee-shell",
		"/home/cobells/Work/node/node_modules/coffee-shell/coffee-shell.coffee",
		"/home/cobells/Work/node/node_modules/coffee-shell/lexer.coffee",
		"/home/cobells/Work/node/node_modules/coffee-shell/coffee-script.coffee",
		"/home/cobells/Work/node/node_modules/coffee-shell/coffee-script.js",
		"/home/cobells/Work/node/coffee-script/src/grammar.coffee",
		"/home/cobells/.coffee_history",
		"/home/cobells/Work/node/coffee-script/lib/coffee-script/parser.js",
		"/media/Hoard/Work/ubn2/ultimateshell/ultimateshell/debian/install",
		"/home/cobells/.bash_history",
		"/home/cobells/Work/node/node_modules/coffee-shell/new.save",
		"/home/cobells/Work/node/node_modules/coffee-shell/new.save.1",
		"/home/cobells/Work/node/node_modules/coffee-shell/new.save.2",
		"/media/Hoard/Work/ubn2/ultimateshell/ultimateshell/debian/copyright",
		"/media/Hoard/Work/ubn2/ultimateshell/ultimateshell/config.log",
		"/media/Hoard/Work/ubn2/ultimateshell/ultimateshell/debian/20_ultimateshell.gconf-defaults",
		"/media/Hoard/Work/ubn2/ultimateshell/ultimateshell/debian/changelog",
		"/media/Hoard/Work/ubn2/ultimateshell/ultimateshell/debian/rules",
		"/media/Hoard/Work/ubn2/ultimateshell/ultimateshell/debian/prerm",
		"/media/Hoard/Work/ubn2/ultimateshell/ultimateshell/debian/control",
		"/media/Media/System Volume Information/tracking.log",
		"/home/cobells/.gvfs/SFTP for mark on doob-un4/home/mark/Projects/ultimateshell/zsh/.zshrc",
		"/home/cobells/.gvfs/SFTP for mark on doob-un4/home/mark/Projects/ultimateshell/gterminal/oneterminal",
		"/home/cobells/.gvfs/SFTP for mark on doob-un4/home/mark/Projects/ultimateshell/gterminal/tmux-launch",
		"/home/cobells/.gvfs/SFTP for mark on doob-un4/home/mark/Projects/ultimateshell/zsh/.zlogin",
		"/home/cobells/.gvfs/SFTP for mark on doob-un4/home/mark/Projects/ultimateshell/vartest.sh",
		"/home/cobells/.gvfs/SFTP for mark on doob-un4/home/mark/Projects/ultimateshell/tmux/.tmux.conf",
		"/home/cobells/.config/sublime-text-2/Packages/ShellScript/Shell-Unix-Generic.tmLanguage",
		"/home/cobells/.config/sublime-text-2/Packages/User/Distraction Free.sublime-settings",
		"/home/cobells/.config/sublime-text-2/Packages/User/Shell-Unix-Generic.sublime-settings",
		"/home/cobells/.config/sublime-text-2/Packages/User/Plain text.sublime-settings",
		"/home/mark/Projects/unity-2d_5.2-0ubuntu1ppa2_source.build",
		"/home/mark/.cache/.fr-sGxfdB/DEBIAN/control",
		"/home/mark/.cache/.fr-SkLf7o/DEBIAN/md5sums",
		"/home/mark/.cache/.fr-HgiLsb/DEBIAN/control",
		"/home/mark/Projects/ultimateshell/zsh/.zshrc",
		"/home/mark/Projects/ultimateshell/.ultimateshell/.cache/DEBS_avail",
		"/home/mark/Projects/ultimateshell/install.sh",
		"/home/mark/Projects/ultimateshell/gterminal/oneterminal",
		"/home/mark/Projects/ultimateshell/test.sh",
		"/home/mark/Projects/ultimateshell/gterminal/oneterminal.sh",
		"/home/mark/Projects/ultimateshell/.ultimateshell/themes/ultimateshell.zsh-theme",
		"/home/mark/Projects/ultimateshell/screenrc",
		"/home/mark/Projects/ultimateshell/ref/screen/example.screenrc",
		"/home/mark/Projects/ultimateshell/.ultimateshell/themes/zhann.zsh-theme",
		"/home/mark/Projects/ultimateshell/.ultimateshell/themes/philips.zsh-theme",
		"/home/mark/Projects/ultimateshell/.ultimateshell/lib/git.zsh",
		"/home/mark/Projects/ultimateshell/.ultimateshell/themes/robbyrussell.zsh-theme",
		"/home/mark/Projects/Shell Scripts/mouseclick.sh",
		"/home/mark/Projects/ultimateshell/.ultimateshell/bootstrap.sh",
		"/home/mark/Projects/ultimateshell/.ultimateshell/README.textile",
		"/home/mark/.config/sublime-text-2/Packages/ShellScript/Shell-Unix-Generic.tmLanguage",
		"/home/mark/Projects/ultimateshell/.ultimateshell/plugins/npm/npm.plugin.zsh",
		"/home/mark/Projects/ultimateshell/.ultimateshell/.gitignore",
		"/home/mark/Projects/ultimateshell/zsh/zshrc_back",
		"/home/mark/Projects/ultimateshell/.ultimateshell/tools/install.sh",
		"/home/mark/Projects/ultimateshell/.ultimateshell/tools/check_for_upgrade.sh",
		"/home/mark/.oh-my-zsh-backup/templates/zshrc.zsh-template",
		"/home/mark/Projects/ultimateshell/.ultimateshell/themes/apple.zsh-theme",
		"/home/mark/Projects/ultimateshell/.ultimateshell/lib/functions.zsh",
		"/home/mark/.oh-my-zsh-backup/oh-my-zsh.sh",
		"/home/mark/Projects/ultimateshell/ultimateshell.sublime-project",
		"/home/mark/.oh-my-zsh/oh-my-zsh.sh",
		"/home/mark/.oh-my-zsh/README.textile",
		"/home/mark/Projects/ultimateshell/.ultimateshell/lib/directories.zsh",
		"/home/mark/Projects/ultimateshell/.ultimateshell/lib/edit-command-line.zsh",
		"/home/mark/Projects/ultimateshell/ref/conf_order.txt",
		"/home/mark/Projects/ultimateshell/.ultimateshell/lib/theme-and-appearance.zsh",
		"/home/mark/.oh-my-zsh/lib/theme-and-appearance.zsh",
		"/home/mark/Projects/ultimateshell/.ultimateshell/lib/grep.zsh",
		"/home/mark/Projects/ultimateshell/.ultimateshell/custom/example.zsh",
		"/home/mark/Projects/ultimateshell/.ultimateshell/lib/aliases.zsh",
		"/home/mark/.oh-my-zsh/tools/install.sh",
		"/home/mark/Projects/ultimateshell/.ultimateshell/tools/require_tool.sh",
		"/home/mark/.oh-my-zsh/templates/zshrc.zsh-template",
		"/home/mark/.ultimateshell/bootstrap.sh",
		"/home/mark/.oh-my-zsh/tools/require_tool.sh",
		"/home/mark/Projects/ultimateshell/.ultimateshell/tools/upgrade.sh"
	],
	"find":
	{
		"height": 33.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"process",
			"val",
			"return",
			"non",
			"fn",
			"prompt",
			"spawn",
			"tty",
			"promptsin",
			"process.stdin",
			"mask",
			"process",
			"?\", -> ",
			"enableC",
			"shell",
			"stdout",
			"createInter",
			"root.shell",
			"env",
			"proc",
			"block",
			"colors",
			"console.log",
			"		}",
			"binaries",
			"root",
			"] = ->",
			"		",
			"existsSync",
			"			",
			"isDirectory",
			") -> ",
			"1",
			"root",
			"			# 		",
			"#(",
			" #?= (",
			"for",
			"for file in fs.readdirSync pathname then do (file) ->\n			# 	root.binaries[file] ?= (args...) ->\n			",
			"proc = spawn pathname + \"/\" + file, args, {\n					# 	cwd: process.cwd()\n					# 	env: process.env\n					# 	setsid: false\n					# }",
			"for pathname in process.env.PATH.split ':'\n		if path.existsSync pathname then do (pathname) ->\n			for file in fs.readdirSync pathname then do (file) ->\n				root.binaries[file] ?= (args...) ->\n					shell.blockingProc = yes\n					proc = spawn pathname + \"/\" + file, args, {\n						cwd: process.cwd()\n						env: process.env\n						setsid: false\n					}",
			"sandbox",
			"root",
			"null",
			"sandbox",
			"\n	# 				proc.stderr.on 'data', (data) -> process.stderr.write(data)",
			"id",
			"Script.",
			"Script",
			"runInContext",
			"completevar",
			"__filename",
			"inspect",
			"this",
			"indexof",
			"sandbox",
			"#]",
			"inspect",
			"autoc",
			"builtin",
			"indexof",
			"history",
			"global",
			"root",
			"shell",
			"back",
			"builtin",
			"backlog",
			"built",
			"gdm",
			"globa",
			"sand",
			"\n	# Export environment vars to the sandbox namespace\n	sandbox.env = process.env\n\n	# Create the shell by listening to **stdin**.\n	if readline.createInterface.length < 3\n		shell = readline.createInterface process.stdin, autocomplete\n		process.stdin.on 'data', (buffer) -> shell.write buffer\n\n	else\n		shell = readline.createInterface process.stdin, process.stdout, autocomplete\n\n	# load history\n	shell.history = fs.readFileSync(SHELL_HISTORY_FILE, 'utf-8').split('\\n').reverse()\n	shell.history.shift()\n	shell.historyIndex = -1\n	shell.history_fd = fs.openSync SHELL_HISTORY_FILE, 'a+', '644'\n\n	# Make sure that uncaught exceptions don't kill the shell.\n	process.on 'uncaughtException', -> error\n\n	# The current shell.backlog of multi-line code.\n	shell.backlog = ''\n	shell.multilineMode = off\n\n	shell.on 'SIGINT', ->\n		shell.backlog = ''\n		shell.multilineMode = off\n		shell.historyIndex = -1\n		shell.output.write '\\n'\n		shell.line = ''\n		shell.setPrompt SHELL_PROMPT()\n		shell.prompt()\n		#shell.output.cursorTo(shelllength)\n\n	shell.on 'attemptClose', ->\n		if shell.backlog\n			shell.backlog = ''\n			process.stdout.write '\\n'\n			shell.setPrompt SHELL_PROMPT\n			shell.prompt()\n		else\n			shell.close()\n\n	shell.on 'close', ->\n		fs.closeSync shell.history_fd\n		shell.output.write '\\n'\n		shell.input.destroy()\n\n	shell.on 'line', runline\n",
			"context",
			"sand",
			"blockingProc",
			"block",
			"blocking",
			"tab",
			"echo",
			"log",
			"sandbox",
			"this",
			"conso",
			"\", \"",
			"build",
			"launch",
			"run",
			"exec",
			"build",
			"run",
			"build",
			"builtin",
			"shell",
			"global",
			"Buffer",
			"std",
			"multilineMode",
			"backlog",
			"histo",
			"CoffeScri",
			"stdin",
			"createcont",
			"context",
			"error",
			"multi",
			"?=",
			"join",
			"return",
			"tmp",
			",",
			"path",
			"string",
			"STRING",
			"string",
			"@",
			"makestr",
			"run",
			"console",
			",",
			"111111111111111",
			"output\\+=",
			"']",
			"off",
			"}\\\"]\"",
			"escape",
			"makeStr",
			"make"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"stdin",
			"\n\n\nroot",
			"\n\n\nvm.",
			"vm",
			"shell.blockingProc",
			"sandbox",
			"shell.multilineMode",
			"shell.backlog",
			"output.push ",
			"val",
			"=",
			"'",
			"drawMode",
			"\\\"$1\\\":\\n",
			"\\\"$1\\\":",
			"\\U$1",
			"\\u$1",
			"$1",
			": \"",
			"\"",
			""
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 32.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"",
				"bin/coffee-shell"
			],
			[
				"exec",
				"lexer.coffee"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 277.0,
	"status_bar_visible": true
}
